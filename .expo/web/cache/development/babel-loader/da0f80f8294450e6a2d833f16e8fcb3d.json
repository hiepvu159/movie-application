{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport ExponentAV from \"./ExponentAV\";\nimport { requestFullscreen, exitFullscreen } from \"./FullscreenUtils.web\";\nexport default {\n  get name() {\n    return 'ExpoVideoManager';\n  },\n\n  get ScaleNone() {\n    return 'none';\n  },\n\n  get ScaleToFill() {\n    return 'fill';\n  },\n\n  get ScaleAspectFit() {\n    return 'contain';\n  },\n\n  get ScaleAspectFill() {\n    return 'cover';\n  },\n\n  setFullscreen: function () {\n    var _setFullscreen = _asyncToGenerator(function* (element, isFullScreenEnabled) {\n      if (isFullScreenEnabled) {\n        yield requestFullscreen(element);\n      } else {\n        yield exitFullscreen(element);\n      }\n\n      return ExponentAV.getStatusForVideo(element);\n    });\n\n    function setFullscreen(_x, _x2) {\n      return _setFullscreen.apply(this, arguments);\n    }\n\n    return setFullscreen;\n  }()\n};","map":{"version":3,"mappings":";AACA,OAAOA,UAAP;AACA,SAASC,iBAAT,EAA4BC,cAA5B;AAEA,eAAe;EACb,IAAIC,IAAJ,GAAQ;IACN,OAAO,kBAAP;EACD,CAHY;;EAIb,IAAIC,SAAJ,GAAa;IACX,OAAO,MAAP;EACD,CANY;;EAOb,IAAIC,WAAJ,GAAe;IACb,OAAO,MAAP;EACD,CATY;;EAUb,IAAIC,cAAJ,GAAkB;IAChB,OAAO,SAAP;EACD,CAZY;;EAab,IAAIC,eAAJ,GAAmB;IACjB,OAAO,OAAP;EACD,CAfY;;EAiBPC,aAjBO;IAAA,kDAkBXC,OAlBW,EAmBXC,mBAnBW,EAmBiB;MAE5B,IAAIA,mBAAJ,EAAyB;QACvB,MAAMT,iBAAiB,CAACQ,OAAD,CAAvB;MACD,CAFD,MAEO;QACL,MAAMP,cAAc,CAACO,OAAD,CAApB;MACD;;MACD,OAAOT,UAAU,CAACW,iBAAX,CAA6BF,OAA7B,CAAP;IACD,CA3BY;;IAAA;MAAA;IAAA;;IAAA;EAAA;AAAA,CAAf","names":["ExponentAV","requestFullscreen","exitFullscreen","name","ScaleNone","ScaleToFill","ScaleAspectFit","ScaleAspectFill","setFullscreen","element","isFullScreenEnabled","getStatusForVideo"],"sourceRoot":"","sources":["../src/ExpoVideoManager.web.ts"],"sourcesContent":["import { AVPlaybackStatus } from './AV';\nimport ExponentAV from './ExponentAV';\nimport { requestFullscreen, exitFullscreen } from './FullscreenUtils.web';\n\nexport default {\n  get name(): string {\n    return 'ExpoVideoManager';\n  },\n  get ScaleNone(): string {\n    return 'none';\n  },\n  get ScaleToFill(): string {\n    return 'fill';\n  },\n  get ScaleAspectFit(): string {\n    return 'contain';\n  },\n  get ScaleAspectFill(): string {\n    return 'cover';\n  },\n\n  async setFullscreen(\n    element: HTMLMediaElement,\n    isFullScreenEnabled: boolean\n  ): Promise<AVPlaybackStatus> {\n    if (isFullScreenEnabled) {\n      await requestFullscreen(element);\n    } else {\n      await exitFullscreen(element);\n    }\n    return ExponentAV.getStatusForVideo(element);\n  },\n};\n"]},"metadata":{},"sourceType":"module"}